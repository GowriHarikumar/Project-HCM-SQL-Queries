SELECT
    TO_CHAR(SYSDATE, 'DD-Mon-YYYY', 'NLS_DATE_LANGUAGE=AMERICAN') AS_OF_DATE,
	UPPER(INITCAP(PPNF.TITLE)||' '||PPNF.DISPLAY_NAME) NAME,
    TO_CHAR(PP.DATE_OF_BIRTH, 'DD-Mon-YYYY', 'NLS_DATE_LANGUAGE=AMERICAN') DOB,
	(
        SELECT
            HL.MEANING
        FROM
            HCM_LOOKUPS        HL,
            PER_CITIZENSHIPS   PC
        WHERE
            HL.LOOKUP_TYPE = 'NATIONALITY'
            AND HL.LOOKUP_CODE = PC.LEGISLATION_CODE
            AND SYSDATE BETWEEN NVL(PC.DATE_FROM, SYSDATE) AND NVL(PC.DATE_TO, SYSDATE)
            AND PC.PERSON_ID = PAPF.PERSON_ID
    ) NATIONALITY,
	(
        SELECT
            HAP.NAME
        FROM
            HR_ALL_POSITIONS HAP
        WHERE
            PAAM.POSITION_ID = HAP.POSITION_ID (+)
            AND HAP.ACTIVE_STATUS = 'A'
    ) DESIGNATION,
    DEP.NAME            DEPARTMENT,
	(  SELECT ( LISTAGG(DECODE(TO_CHAR('+'||' '||PP1.COUNTRY_CODE_NUMBER||'-'|| PP1.PHONE_NUMBER), TO_CHAR(' '), '', TO_CHAR('+'||' '||PP1.COUNTRY_CODE_NUMBER|| '-'|| PP1.PHONE_NUMBER)), ',') WITHIN GROUP(
                    ORDER BY  PP1.PHONE_NUMBER )) AS PRIMARY_PHONE
        FROM
            PER_PHONES         PP1,
            PER_ALL_PEOPLE_F   PAPF1
        WHERE
            1 = 1
            AND PAPF.PERSON_ID = PAPF1.PERSON_ID
            AND PP1.PERSON_ID = PAPF1.PERSON_ID
            AND PP1.PHONE_TYPE != 'W1'
        GROUP BY
            PERSON_NUMBER
    ) AS MOBILE_NUMBER,
    TO_CHAR(PPOS.DATE_START, 'DD-Mon-YYYY', 'NLS_DATE_LANGUAGE=AMERICAN') DATE_OF_JOINING,
	LE.NAME 			LEGAL_ENTITY,
    PAPF.PERSON_NUMBER   EMP_CODE,
    HL.ADDRESS1||' '||HL.ADDRESS2||' '||(SELECT A.TERRITORY_SHORT_NAME FROM FND_TERRITORIES_TL A 
			WHERE HL.COUNTRY=A.TERRITORY_CODE AND A.LANGUAGE=USERENV('LANG')) LE_ADDRESS,
	'Member of Ali & Sons Holding LLC' Legal_line2,
    EML.email_address 		EMAIL_ADDRESS,
	HAOU.NAME BU_NAME,

(
        SELECT
            CASE WHEN TO_CHAR(CSSC.AMOUNT) <> '0' THEN TO_CHAR(CSSC.AMOUNT) ELSE TO_CHAR(' ') END
        FROM
            CMP_SALARY CS, CMP_SALARY_SIMPLE_COMPNTS CSSC
        WHERE
            CS.PERSON_ID = PAPF.PERSON_ID
            AND CS.ASSIGNMENT_ID = PAAM.ASSIGNMENT_ID
			AND CS.SALARY_ID = CSSC.SALARY_ID
            AND SALARY_APPROVED = 'Y'
            AND CS.DATE_TO > SYSDATE
			AND COMPONENT_CODE = 'ORA_BASIC'
    ) BASIC_SALARY,
	
			 (
        SELECT
            CASE WHEN TO_CHAR(CSSC.AMOUNT) <> '0' THEN 'Basic Salary' ELSE ' ' END
        FROM
            CMP_SALARY CS, CMP_SALARY_SIMPLE_COMPNTS CSSC
        WHERE
            CS.PERSON_ID = PAPF.PERSON_ID
            AND CS.ASSIGNMENT_ID = PAAM.ASSIGNMENT_ID
			AND CS.SALARY_ID = CSSC.SALARY_ID
            AND SALARY_APPROVED = 'Y'
            AND CS.DATE_TO > SYSDATE
			AND COMPONENT_CODE = 'ORA_BASIC'
    ) BASIC_1,

	
	(SELECT
            CASE WHEN TO_CHAR(CSSC.AMOUNT) <> '0' THEN TO_CHAR(CSSC.AMOUNT) ELSE TO_CHAR(' ') END 
        FROM
            CMP_SALARY CS, CMP_SALARY_SIMPLE_COMPNTS CSSC
        WHERE
            CS.PERSON_ID = PAPF.PERSON_ID
            AND CS.ASSIGNMENT_ID = PAAM.ASSIGNMENT_ID
			AND CS.SALARY_ID = CSSC.SALARY_ID
            AND SALARY_APPROVED = 'Y'
            AND CS.DATE_TO > SYSDATE
			AND COMPONENT_CODE = 'ASH_AIR_TICKET'
    ) AIR_TICKEET_ALLOWANCE, 
	
				 (
        SELECT
            CASE WHEN TO_CHAR(CSSC.AMOUNT) <> '0' THEN 'Air Ticket Allowance' ELSE ' ' END
        FROM
            CMP_SALARY CS, CMP_SALARY_SIMPLE_COMPNTS CSSC
        WHERE
            CS.PERSON_ID = PAPF.PERSON_ID
            AND CS.ASSIGNMENT_ID = PAAM.ASSIGNMENT_ID
			AND CS.SALARY_ID = CSSC.SALARY_ID
            AND SALARY_APPROVED = 'Y'
            AND CS.DATE_TO > SYSDATE
			AND COMPONENT_CODE = 'ASH_AIR_TICKET'
    ) AIR_1,
	
	 (
        SELECT
            CASE WHEN TO_CHAR(CSSC.AMOUNT) <> '0' THEN TO_CHAR(CSSC.AMOUNT) ELSE TO_CHAR(' ') END
        FROM
            CMP_SALARY CS, CMP_SALARY_SIMPLE_COMPNTS CSSC
        WHERE
            CS.PERSON_ID = PAPF.PERSON_ID
            AND CS.ASSIGNMENT_ID = PAAM.ASSIGNMENT_ID
			AND CS.SALARY_ID = CSSC.SALARY_ID
            AND SALARY_APPROVED = 'Y'
            AND CS.DATE_TO > SYSDATE
			AND COMPONENT_CODE = 'ASH_Bonus_Guaranteed'
    ) GUARANTEED_BONUS,
	
				 (
        SELECT
            CASE WHEN TO_CHAR(CSSC.AMOUNT) <> '0' THEN 'Guaranteed Bonus' ELSE ' ' END
        FROM
            CMP_SALARY CS, CMP_SALARY_SIMPLE_COMPNTS CSSC
        WHERE
            CS.PERSON_ID = PAPF.PERSON_ID
            AND CS.ASSIGNMENT_ID = PAAM.ASSIGNMENT_ID
			AND CS.SALARY_ID = CSSC.SALARY_ID
            AND SALARY_APPROVED = 'Y'
            AND CS.DATE_TO > SYSDATE
			AND COMPONENT_CODE = 'ASH_Bonus_Guaranteed'
    ) GUARANTEED_1,
	
	
	 (
        SELECT
            CASE WHEN TO_CHAR(CSSC.AMOUNT) <> '0' THEN TO_CHAR(CSSC.AMOUNT) ELSE TO_CHAR(' ') END
        FROM
            CMP_SALARY CS, CMP_SALARY_SIMPLE_COMPNTS CSSC
        WHERE
            CS.PERSON_ID = PAPF.PERSON_ID
            AND CS.ASSIGNMENT_ID = PAAM.ASSIGNMENT_ID
			AND CS.SALARY_ID = CSSC.SALARY_ID
            AND SALARY_APPROVED = 'Y'
            AND CS.DATE_TO > SYSDATE
			AND COMPONENT_CODE = 'ASH_CAR_ALLOWANCE'
    ) Car_Allowance,
	
				 (
        SELECT
            CASE WHEN TO_CHAR(CSSC.AMOUNT) <> '0' THEN 'Car Allowance' ELSE ' ' END
        FROM
            CMP_SALARY CS, CMP_SALARY_SIMPLE_COMPNTS CSSC
        WHERE
            CS.PERSON_ID = PAPF.PERSON_ID
            AND CS.ASSIGNMENT_ID = PAAM.ASSIGNMENT_ID
			AND CS.SALARY_ID = CSSC.SALARY_ID
            AND SALARY_APPROVED = 'Y'
            AND CS.DATE_TO > SYSDATE
			AND COMPONENT_CODE = 'ASH_CAR_ALLOWANCE'
    ) CAR_1,
		
	(SELECT
            CASE WHEN TO_CHAR(CSSC.AMOUNT) <> '0' THEN TO_CHAR(CSSC.AMOUNT) ELSE TO_CHAR(' ') END
        FROM
            CMP_SALARY CS, CMP_SALARY_SIMPLE_COMPNTS CSSC
        WHERE
            CS.PERSON_ID = PAPF.PERSON_ID
            AND CS.ASSIGNMENT_ID = PAAM.ASSIGNMENT_ID
			AND CS.SALARY_ID = CSSC.SALARY_ID
            AND SALARY_APPROVED = 'Y'
            AND CS.DATE_TO > SYSDATE
			AND COMPONENT_CODE = 'ASH_LIVING_ALLOWANCE'
    ) Living_Allowance,
	
	(SELECT
            CASE WHEN TO_CHAR(CSSC.AMOUNT) <> '0' THEN 'Living Allowance' ELSE ' ' END
        FROM
            CMP_SALARY CS, CMP_SALARY_SIMPLE_COMPNTS CSSC
        WHERE
            CS.PERSON_ID = PAPF.PERSON_ID
            AND CS.ASSIGNMENT_ID = PAAM.ASSIGNMENT_ID
			AND CS.SALARY_ID = CSSC.SALARY_ID
            AND SALARY_APPROVED = 'Y'
            AND CS.DATE_TO > SYSDATE
			AND COMPONENT_CODE = 'ASH_LIVING_ALLOWANCE'
    ) Living_1,

	(
        SELECT
            CASE WHEN TO_CHAR(CSSC.AMOUNT) <> '0' THEN TO_CHAR(CSSC.AMOUNT) ELSE TO_CHAR(' ') END
        FROM
            CMP_SALARY CS, CMP_SALARY_SIMPLE_COMPNTS CSSC
        WHERE
            CS.PERSON_ID = PAPF.PERSON_ID
            AND CS.ASSIGNMENT_ID = PAAM.ASSIGNMENT_ID
			AND CS.SALARY_ID = CSSC.SALARY_ID
            AND SALARY_APPROVED = 'Y'
            AND CS.DATE_TO > SYSDATE
			AND COMPONENT_CODE = 'ASH_FOOD_ALLOWANCE'
    ) FOOD_ALLOWANCE,
	
				 (
        SELECT
            CASE WHEN TO_CHAR(CSSC.AMOUNT) <> '0' THEN 'Food Allowance' ELSE ' ' END
        FROM
            CMP_SALARY CS, CMP_SALARY_SIMPLE_COMPNTS CSSC
        WHERE
            CS.PERSON_ID = PAPF.PERSON_ID
            AND CS.ASSIGNMENT_ID = PAAM.ASSIGNMENT_ID
			AND CS.SALARY_ID = CSSC.SALARY_ID
            AND SALARY_APPROVED = 'Y'
            AND CS.DATE_TO > SYSDATE
			AND COMPONENT_CODE = 'ASH_FOOD_ALLOWANCE'
    ) Food_1,

	(
        SELECT
            CASE WHEN TO_CHAR(CSSC.AMOUNT) <> '0' THEN TO_CHAR(CSSC.AMOUNT) ELSE TO_CHAR(' ') END
        FROM
            CMP_SALARY CS, CMP_SALARY_SIMPLE_COMPNTS CSSC
        WHERE
            CS.PERSON_ID = PAPF.PERSON_ID
            AND CS.ASSIGNMENT_ID = PAAM.ASSIGNMENT_ID
			AND CS.SALARY_ID = CSSC.SALARY_ID
            AND SALARY_APPROVED = 'Y'
            AND CS.DATE_TO > SYSDATE
			AND COMPONENT_CODE = 'ASH_FURNITURE_ALLOWANCE'
    )  FURNITURE_ALLOWANCE,
	
				 (
        SELECT
            CASE WHEN TO_CHAR(CSSC.AMOUNT) <> '0' THEN 'Furniture Allowance' ELSE ' ' END
        FROM
            CMP_SALARY CS, CMP_SALARY_SIMPLE_COMPNTS CSSC
        WHERE
            CS.PERSON_ID = PAPF.PERSON_ID
            AND CS.ASSIGNMENT_ID = PAAM.ASSIGNMENT_ID
			AND CS.SALARY_ID = CSSC.SALARY_ID
            AND SALARY_APPROVED = 'Y'
            AND CS.DATE_TO > SYSDATE
			AND COMPONENT_CODE = 'ASH_FURNITURE_ALLOWANCE'
    ) Furniture_1,
	
	(
        SELECT
            CASE WHEN TO_CHAR(CSSC.AMOUNT) <> '0' THEN TO_CHAR(CSSC.AMOUNT) ELSE TO_CHAR(' ') END
        FROM
            CMP_SALARY CS, CMP_SALARY_SIMPLE_COMPNTS CSSC
        WHERE
            CS.PERSON_ID = PAPF.PERSON_ID
            AND CS.ASSIGNMENT_ID = PAAM.ASSIGNMENT_ID
			AND CS.SALARY_ID = CSSC.SALARY_ID
            AND SALARY_APPROVED = 'Y'
            AND CS.DATE_TO > SYSDATE
			AND COMPONENT_CODE = 'ORA_HOUSING_ALLOWANCE'
    ) HOUSING_RENT_ALLOWANCE,
	
				 (
        SELECT
            CASE WHEN TO_CHAR(CSSC.AMOUNT) <> '0' THEN 'Housing Rent Allowance' ELSE ' ' END
        FROM
            CMP_SALARY CS, CMP_SALARY_SIMPLE_COMPNTS CSSC
        WHERE
            CS.PERSON_ID = PAPF.PERSON_ID
            AND CS.ASSIGNMENT_ID = PAAM.ASSIGNMENT_ID
			AND CS.SALARY_ID = CSSC.SALARY_ID
            AND SALARY_APPROVED = 'Y'
            AND CS.DATE_TO > SYSDATE
			AND COMPONENT_CODE = 'ORA_HOUSING_ALLOWANCE'
    ) Housing_1,


	(
        SELECT
            CASE WHEN TO_CHAR(CSSC.AMOUNT) <> '0' THEN TO_CHAR(CSSC.AMOUNT) ELSE TO_CHAR(' ') END
        FROM
            CMP_SALARY CS, CMP_SALARY_SIMPLE_COMPNTS CSSC
        WHERE
            CS.PERSON_ID = PAPF.PERSON_ID
            AND CS.ASSIGNMENT_ID = PAAM.ASSIGNMENT_ID
			AND CS.SALARY_ID = CSSC.SALARY_ID
            AND SALARY_APPROVED = 'Y'
            AND CS.DATE_TO > SYSDATE
			AND COMPONENT_CODE = 'ASH_MOBILE_ALLOWANCE'
    ) MOBILE_ALLOWANCE,
	
				 (
        SELECT
            CASE WHEN TO_CHAR(CSSC.AMOUNT) <> '0' THEN 'Mobile Allowance' ELSE ' ' END
        FROM
            CMP_SALARY CS, CMP_SALARY_SIMPLE_COMPNTS CSSC
        WHERE
            CS.PERSON_ID = PAPF.PERSON_ID
            AND CS.ASSIGNMENT_ID = PAAM.ASSIGNMENT_ID
			AND CS.SALARY_ID = CSSC.SALARY_ID
            AND SALARY_APPROVED = 'Y'
            AND CS.DATE_TO > SYSDATE
			AND COMPONENT_CODE = 'ASH_MOBILE_ALLOWANCE'
    ) Mobile_1,
	

	(
        SELECT
            CASE WHEN TO_CHAR(CSSC.AMOUNT) <> '0' THEN TO_CHAR(CSSC.AMOUNT) ELSE TO_CHAR(' ') END
        FROM
            CMP_SALARY CS, CMP_SALARY_SIMPLE_COMPNTS CSSC
        WHERE
            CS.PERSON_ID = PAPF.PERSON_ID
            AND CS.ASSIGNMENT_ID = PAAM.ASSIGNMENT_ID
			AND CS.SALARY_ID = CSSC.SALARY_ID
            AND SALARY_APPROVED = 'Y'
            AND CS.DATE_TO > SYSDATE
			AND COMPONENT_CODE = 'ASH_OTHER_ALLOWANCE'
    ) OTHER_ALLOWANCE,
	
				 (
        SELECT
            CASE WHEN TO_CHAR(CSSC.AMOUNT) <> '0' THEN 'Other Allowance' ELSE ' ' END
        FROM
            CMP_SALARY CS, CMP_SALARY_SIMPLE_COMPNTS CSSC
        WHERE
            CS.PERSON_ID = PAPF.PERSON_ID
            AND CS.ASSIGNMENT_ID = PAAM.ASSIGNMENT_ID
			AND CS.SALARY_ID = CSSC.SALARY_ID
            AND SALARY_APPROVED = 'Y'
            AND CS.DATE_TO > SYSDATE
			AND COMPONENT_CODE = 'ASH_OTHER_ALLOWANCE'
    ) Other_1,
	
	(
        SELECT
            CASE WHEN TO_CHAR(CSSC.AMOUNT) <> '0' THEN TO_CHAR(CSSC.AMOUNT) ELSE TO_CHAR(' ') END
        FROM
            CMP_SALARY CS, CMP_SALARY_SIMPLE_COMPNTS CSSC
        WHERE
            CS.PERSON_ID = PAPF.PERSON_ID
            AND CS.ASSIGNMENT_ID = PAAM.ASSIGNMENT_ID
			AND CS.SALARY_ID = CSSC.SALARY_ID
            AND SALARY_APPROVED = 'Y'
            AND CS.DATE_TO > SYSDATE
			AND COMPONENT_CODE = 'ORA_SPECIAL_ALLOWANCE'
    ) SPECIAL_ALLOWANCE,
	
				 (
        SELECT
            CASE WHEN TO_CHAR(CSSC.AMOUNT) <> '0' THEN 'Special Allowance' ELSE ' ' END
        FROM
            CMP_SALARY CS, CMP_SALARY_SIMPLE_COMPNTS CSSC
        WHERE
            CS.PERSON_ID = PAPF.PERSON_ID
            AND CS.ASSIGNMENT_ID = PAAM.ASSIGNMENT_ID
			AND CS.SALARY_ID = CSSC.SALARY_ID
            AND SALARY_APPROVED = 'Y'
            AND CS.DATE_TO > SYSDATE
			AND COMPONENT_CODE = 'ORA_SPECIAL_ALLOWANCE'
    ) Special_1,


	(
        SELECT
            CASE WHEN TO_CHAR(CSSC.AMOUNT) <> '0' THEN TO_CHAR(CSSC.AMOUNT) ELSE TO_CHAR(' ') END
        FROM
            CMP_SALARY CS, CMP_SALARY_SIMPLE_COMPNTS CSSC
        WHERE
            CS.PERSON_ID = PAPF.PERSON_ID
            AND CS.ASSIGNMENT_ID = PAAM.ASSIGNMENT_ID
			AND CS.SALARY_ID = CSSC.SALARY_ID
            AND SALARY_APPROVED = 'Y'
            AND CS.DATE_TO > SYSDATE
			AND COMPONENT_CODE = 'ASH_TELEPHONE_ALLOWANCE'
    ) TELEPHONE_ALLOWANCE,
	
				 
        (SELECT
            CASE WHEN TO_CHAR(CSSC.AMOUNT) <> '0' THEN 'Telephone Allowance' ELSE ' ' END
        FROM
            CMP_SALARY CS, CMP_SALARY_SIMPLE_COMPNTS CSSC
        WHERE
            CS.PERSON_ID = PAPF.PERSON_ID
            AND CS.ASSIGNMENT_ID = PAAM.ASSIGNMENT_ID
			AND CS.SALARY_ID = CSSC.SALARY_ID
            AND SALARY_APPROVED = 'Y'
            AND CS.DATE_TO > SYSDATE
			AND COMPONENT_CODE = 'ASH_TELEPHONE_ALLOWANCE'
    ) Telephone_1,
			
	(
        SELECT
            CASE WHEN TO_CHAR(CSSC.AMOUNT) <> '0' THEN TO_CHAR(CSSC.AMOUNT) ELSE TO_CHAR(' ') END
        FROM
            CMP_SALARY CS, CMP_SALARY_SIMPLE_COMPNTS CSSC
        WHERE
            CS.PERSON_ID = PAPF.PERSON_ID
            AND CS.ASSIGNMENT_ID = PAAM.ASSIGNMENT_ID
			AND CS.SALARY_ID = CSSC.SALARY_ID
            AND SALARY_APPROVED = 'Y'
            AND CS.DATE_TO > SYSDATE
			AND COMPONENT_CODE = 'ORA_TRANSPORT_ALLOWANCE'
    ) TRANSPORT_ALLOWANCE,
	
	        (SELECT
            CASE WHEN TO_CHAR(CSSC.AMOUNT) <> '0' THEN 'Transport Allowance' ELSE ' ' END
        FROM
            CMP_SALARY CS, CMP_SALARY_SIMPLE_COMPNTS CSSC
        WHERE
            CS.PERSON_ID = PAPF.PERSON_ID
            AND CS.ASSIGNMENT_ID = PAAM.ASSIGNMENT_ID
			AND CS.SALARY_ID = CSSC.SALARY_ID
            AND SALARY_APPROVED = 'Y'
            AND CS.DATE_TO > SYSDATE
			AND COMPONENT_CODE = 'ORA_TRANSPORT_ALLOWANCE'
    ) Transport_1,

	(
        SELECT
            CASE WHEN TO_CHAR(CSSC.AMOUNT) <> '0' THEN TO_CHAR(CSSC.AMOUNT) ELSE TO_CHAR(' ') END
        FROM
            CMP_SALARY CS, CMP_SALARY_SIMPLE_COMPNTS CSSC
        WHERE
            CS.PERSON_ID = PAPF.PERSON_ID
            AND CS.ASSIGNMENT_ID = PAAM.ASSIGNMENT_ID
			AND CS.SALARY_ID = CSSC.SALARY_ID
            AND SALARY_APPROVED = 'Y'
            AND CS.DATE_TO > SYSDATE
			AND COMPONENT_CODE = 'ASH_UTILITY_ALLOWANCE'
    ) UTILITY_ALLOWANCE,
	
		        (SELECT
            CASE WHEN TO_CHAR(CSSC.AMOUNT) <> '0' THEN 'Utility Allowance' ELSE ' ' END
        FROM
            CMP_SALARY CS, CMP_SALARY_SIMPLE_COMPNTS CSSC
        WHERE
            CS.PERSON_ID = PAPF.PERSON_ID
            AND CS.ASSIGNMENT_ID = PAAM.ASSIGNMENT_ID
			AND CS.SALARY_ID = CSSC.SALARY_ID
            AND SALARY_APPROVED = 'Y'
            AND CS.DATE_TO > SYSDATE
			AND COMPONENT_CODE = 'ASH_UTILITY_ALLOWANCE'
    ) Utility_1,
	
	(
        SELECT
            CASE WHEN TO_CHAR(CSSC.AMOUNT) <> '0' THEN TO_CHAR(CSSC.AMOUNT) ELSE TO_CHAR(' ') END
        FROM
            CMP_SALARY CS, CMP_SALARY_SIMPLE_COMPNTS CSSC
        WHERE
            CS.PERSON_ID = PAPF.PERSON_ID
            AND CS.ASSIGNMENT_ID = PAAM.ASSIGNMENT_ID
			AND CS.SALARY_ID = CSSC.SALARY_ID
            AND SALARY_APPROVED = 'Y'
            AND CS.DATE_TO > SYSDATE
			AND COMPONENT_CODE = 'ORA_VAR_ALLOWANCE'
    ) VARIABLE_ALLOWANCE,
	
		        (SELECT
            CASE WHEN TO_CHAR(CSSC.AMOUNT) <> '0' THEN 'Variable Allowance' ELSE ' ' END
        FROM
            CMP_SALARY CS, CMP_SALARY_SIMPLE_COMPNTS CSSC
        WHERE
            CS.PERSON_ID = PAPF.PERSON_ID
            AND CS.ASSIGNMENT_ID = PAAM.ASSIGNMENT_ID
			AND CS.SALARY_ID = CSSC.SALARY_ID
            AND SALARY_APPROVED = 'Y'
            AND CS.DATE_TO > SYSDATE
			AND COMPONENT_CODE = 'ORA_VAR_ALLOWANCE'
    ) Variable_1,
		
	(
        SELECT
            CASE WHEN TO_CHAR(CSSC.AMOUNT) <> '0' THEN TO_CHAR(CSSC.AMOUNT) ELSE TO_CHAR(' ') END
        FROM
            CMP_SALARY CS, CMP_SALARY_SIMPLE_COMPNTS CSSC
        WHERE
            CS.PERSON_ID = PAPF.PERSON_ID
            AND CS.ASSIGNMENT_ID = PAAM.ASSIGNMENT_ID
			AND CS.SALARY_ID = CSSC.SALARY_ID
            AND SALARY_APPROVED = 'Y'
            AND CS.DATE_TO > SYSDATE
			AND COMPONENT_CODE = 'ORA_OVERALL_SALARY'
    ) ORA_OVERALL_SALARY,
	
	(SELECT
            CASE WHEN TO_CHAR(CSSC.AMOUNT) <> '0' THEN 'Total Amount (AED)' ELSE ' ' END
        FROM
            CMP_SALARY CS, CMP_SALARY_SIMPLE_COMPNTS CSSC
        WHERE
            CS.PERSON_ID = PAPF.PERSON_ID
            AND CS.ASSIGNMENT_ID = PAAM.ASSIGNMENT_ID
			AND CS.SALARY_ID = CSSC.SALARY_ID
            AND SALARY_APPROVED = 'Y'
            AND CS.DATE_TO > SYSDATE
			AND COMPONENT_CODE = 'ORA_OVERALL_SALARY'
    ) OVERALL_SAL_1,
	
	PAAM.ASS_ATTRIBUTE1 MAIN_DEPARTMENT,
	CASE WHEN PAAM.ASS_ATTRIBUTE4 IS NULL THEN 'No' WHEN PAAM.ASS_ATTRIBUTE4 = 'HRA' THEN 'No' ELSE 'Yes' END AS ACCOMODATEION,
	CASE WHEN PAAM.ASS_ATTRIBUTE8 IS NULL THEN 'No' WHEN PAAM.ASS_ATTRIBUTE8 = 'Company Car' THEN 'No' ELSE 'Yes' END AS TRASPORTATION,
	PCF.ATTRIBUTE_NUMBER1 F_IN_AM,
	PCF.ATTRIBUTE_NUMBER8 AIR_I_AT,
	CASE WHEN PCF.ATTRIBUTE_NUMBER2 IS NOT NULL THEN '12th Month Increment '||' amount will be increased by '||PCF.ATTRIBUTE_NUMBER2 ELSE '' END AS SEC_REV,
	CASE WHEN PCF.ATTRIBUTE_NUMBER3 IS NOT NULL THEN '18th Month Increment '||' amount will be increased by '||PCF.ATTRIBUTE_NUMBER3 ELSE '' END AS THRD_REV,
	CASE WHEN PCF.ATTRIBUTE_NUMBER4 IS NOT NULL THEN '24th Month Increment '||' amount will be increased by '||PCF.ATTRIBUTE_NUMBER4 ELSE '' END AS FOUR_REV,
	
	   (SELECT DISTINCT PBAC.bank_name
    FROM pay_pay_relationships_dn PRLN ,
         pay_person_pay_methods_f PPPM ,
         pay_bank_accounts PBAC ,
         pay_payroll_assignments PPA
    WHERE PRLN.payroll_relationship_id = PPPM.payroll_relationship_id
       AND PPPM.bank_account_id = PBAC.bank_account_id
       AND PPA.hr_assignment_id = PAAM.assignment_id
       AND PPA.PAYROLL_RELATIONSHIP_ID = PRLN.payroll_relationship_id
       AND TRUNC(SYSDATE+1) BETWEEN PPPM.effective_start_date AND PPPM.effective_end_date
	   AND TRUNC(SYSDATE+1) BETWEEN PPA.start_date AND PPA.end_date
	   AND TRUNC(SYSDATE+1) BETWEEN PRLN.start_date AND PRLN.end_date
       AND TRUNC(SYSDATE+1) BETWEEN PBAC.start_date AND PBAC.end_date ) 	BANK_NAME,
	   
	   	   (SELECT DISTINCT PBAC.BANK_ACCOUNT_NUM
    FROM pay_pay_relationships_dn PRLN ,
         pay_person_pay_methods_f PPPM ,
         pay_bank_accounts PBAC ,
         pay_payroll_assignments PPA
    WHERE PRLN.payroll_relationship_id = PPPM.payroll_relationship_id
       AND PPPM.bank_account_id = PBAC.bank_account_id
       AND PPA.hr_assignment_id = PAAM.assignment_id
       AND PPA.PAYROLL_RELATIONSHIP_ID = PRLN.payroll_relationship_id
       AND TRUNC(SYSDATE+1) BETWEEN PPPM.effective_start_date AND PPPM.effective_end_date
	   AND TRUNC(SYSDATE+1) BETWEEN PPA.start_date AND PPA.end_date
	   AND TRUNC(SYSDATE+1) BETWEEN PRLN.start_date AND PRLN.end_date
       AND TRUNC(SYSDATE+1) BETWEEN PBAC.start_date AND PBAC.end_date ) 	ACCOUNT_NUMBER,
	   
	   	   (SELECT DISTINCT PBAC.IBAN_NUMBER
    FROM pay_pay_relationships_dn PRLN ,
         pay_person_pay_methods_f PPPM ,
         pay_bank_accounts PBAC ,
         pay_payroll_assignments PPA
    WHERE PRLN.payroll_relationship_id = PPPM.payroll_relationship_id
       AND PPPM.bank_account_id = PBAC.bank_account_id
       AND PPA.hr_assignment_id = PAAM.assignment_id
       AND PPA.PAYROLL_RELATIONSHIP_ID = PRLN.payroll_relationship_id
       AND TRUNC(SYSDATE+1) BETWEEN PPPM.effective_start_date AND PPPM.effective_end_date
	   AND TRUNC(SYSDATE+1) BETWEEN PPA.start_date AND PPA.end_date
	   AND TRUNC(SYSDATE+1) BETWEEN PRLN.start_date AND PRLN.end_date
       AND TRUNC(SYSDATE+1) BETWEEN PBAC.start_date AND PBAC.end_date ) 	IBAN_NUMBER,
	   
	   CASE WHEN PCR.CONTACT_TYPE = 'S' THEN 'Spouse' ELSE PCR.CONTACT_TYPE END AS CONTACT_TYPE,
	   
	   (SELECT PAPF1.PERSON_NUMBER FROM PER_ALL_PEOPLE_F  PAPF1 WHERE PAPF1.PERSON_ID = PCR.CONTACT_PERSON_ID) R_EMP_CODE,
	   
	   (SELECT UPPER(INITCAP(PPNF1.TITLE)||' '||PPNF1.DISPLAY_NAME) FROM PER_PERSON_NAMES_F PPNF1  WHERE  PPNF1.PERSON_ID = PCR.CONTACT_PERSON_ID AND PPNF1.NAME_TYPE = 'GLOBAL') R_EMP_NAME,
	   
	   (SELECT TO_CHAR(PPOS1.DATE_START, 'DD-Mon-YYYY', 'NLS_DATE_LANGUAGE=AMERICAN')
				FROM
					PER_PERIODS_OF_SERVICE PPOS1
				WHERE
					PCR.CONTACT_PERSON_ID = PPOS1.PERSON_ID(+)
					AND PPOS1.PRIMARY_FLAG = 'Y'
					AND ROWNUM = 1) R_DOJ,
					
			(SELECT
				HAP.NAME
			FROM
				HR_ALL_POSITIONS      HAP,
				PER_ALL_ASSIGNMENTS_M PAAM1
			WHERE
				PAAM1.POSITION_ID = HAP.POSITION_ID (+)
				AND HAP.ACTIVE_STATUS = 'A'
				AND PAAM1.PERSON_ID = PCR.CONTACT_PERSON_ID
				AND PAAM1.PRIMARY_FLAG = 'Y'
				AND TRUNC(PAAM1.EFFECTIVE_END_DATE) > TRUNC(SYSDATE)) R_DESIGNATION,
				
			(SELECT  DEP1.NAME FROM HR_ALL_ORGANIZATION_UNITS DEP1 ,PER_ALL_ASSIGNMENTS_M PAAM2
				WHERE 
				 PAAM2.ORGANIZATION_ID = DEP1.ORGANIZATION_ID (+)
				AND PAAM2.PERSON_ID = PCR.CONTACT_PERSON_ID
				AND PAAM2.PRIMARY_FLAG = 'Y'
				AND TRUNC(PAAM2.EFFECTIVE_END_DATE) > TRUNC(SYSDATE)
				AND ROWNUM = 1) R_DEPARTMENT,
				 
			(SELECT PAAM3.ASS_ATTRIBUTE1 FROM PER_ALL_ASSIGNMENTS_M PAAM3 
			WHERE 
				PAAM3.PERSON_ID = PCR.CONTACT_PERSON_ID
				AND PAAM3.PRIMARY_FLAG = 'Y'
				AND TRUNC(PAAM3.EFFECTIVE_END_DATE) > TRUNC(SYSDATE)
				AND ROWNUM = 1) R_MAIN_DEPA,
				
			(SELECT HAOU1.NAME FROM HR_ALL_ORGANIZATION_UNITS   HAOU1 ,HR_LEGAL_ENTITIES  LE1, PER_ALL_ASSIGNMENTS_M PAAM4
				WHERE
					LE1.ORGANIZATION_ID = HAOU1.ORGANIZATION_ID(+)
				AND PAAM4.LEGAL_ENTITY_ID = LE1.ORGANIZATION_ID(+)   
				AND PAAM4.PERSON_ID = PCR.CONTACT_PERSON_ID
				AND PAAM4.PRIMARY_FLAG = 'Y'
				AND TRUNC(PAAM4.EFFECTIVE_END_DATE) > TRUNC(SYSDATE) 
				AND LE1.STATUS = 'A'
				AND LE1.CLASSIFICATION_CODE = 'HCM_LEMP'
				AND TRUNC(SYSDATE) BETWEEN LE1.EFFECTIVE_START_DATE AND LE1.EFFECTIVE_END_DATE
				AND ROWNUM = 1) R_BU,
				
				(SELECT  CASE WHEN TRUNC(SYSDATE) BETWEEN TRUNC(PPAF1.EFFECTIVE_START_DATE) AND (PPAF1.EFFECTIVE_END_DATE) THEN 'Yes' ELSE 'No' END  FROM PER_ALL_PEOPLE_F PPAF1 WHERE PPAF1.PERSON_ID = PCR.CONTACT_PERSON_ID) R_STATUS,
				
			   (SELECT
		case when C.telephone_number_1 is not null then '+'||''||C.telephone_number_1 else C.telephone_number_1 end 
		FROM
			HR_OPERATING_UNITS HRO,
			HR_ALL_ORGANIZATION_UNITS_F B,
			HR_LOCATIONS_ALL C
		WHERE 
			1=1
		AND HRO.ORGANIZATION_ID = B.ORGANIZATION_ID
		AND B.LOCATION_ID = C.LOCATION_ID
		AND LE.NAME = HRO.NAME) LE_PHONE,
		
			   (SELECT
		case when C.telephone_number_2 is not null then '+'||''||C.telephone_number_2 else C.telephone_number_2 end
		FROM
			HR_OPERATING_UNITS HRO,
			HR_ALL_ORGANIZATION_UNITS_F B,
			HR_LOCATIONS_ALL C
		WHERE 
			1=1
		AND HRO.ORGANIZATION_ID = B.ORGANIZATION_ID
		AND B.LOCATION_ID = C.LOCATION_ID
		AND LE.NAME = HRO.NAME) LE_FX
	   
FROM 
	PER_ALL_PEOPLE_F            PAPF,
    PER_PERSONS                 PP,
    PER_ALL_ASSIGNMENTS_M       PAAM,
    HR_ALL_ORGANIZATION_UNITS   DEP,
    PER_PERIODS_OF_SERVICE      PPOS,
    HR_LEGAL_ENTITIES           LE,
    PER_PERSON_NAMES_F          PPNF,
	HZ_LOCATIONS 				HL,
	XLE_REGISTRATIONS 			XR,
    XLE_ENTITY_PROFILES         XEP,
    PER_EMAIL_ADDRESSES 		EML,
    PER_CONTRACTS_F             PCF,
	PER_CONTACT_RELATIONSHIPS   PCR,
	HR_ALL_ORGANIZATION_UNITS   HAOU
WHERE
	1=1
	AND PCR.PERSON_ID(+) = PP.PERSON_ID
    AND PAPF.PERSON_ID = PPNF.PERSON_ID(+)
    AND PPNF.NAME_TYPE = 'GLOBAL'
	AND PAPF.PERSON_ID = PP.PERSON_ID
    AND PP.PERSON_ID(+) = PAAM.PERSON_ID
    AND PAAM.PRIMARY_FLAG = 'Y'
    AND TRUNC(PAAM.EFFECTIVE_END_DATE) > TRUNC(SYSDATE)
    AND PAAM.ORGANIZATION_ID = DEP.ORGANIZATION_ID (+)
    AND PAAM.PERIOD_OF_SERVICE_ID = PPOS.PERIOD_OF_SERVICE_ID(+)
    AND PAAM.LEGAL_ENTITY_ID = LE.ORGANIZATION_ID(+)   
	AND LE.STATUS = 'A'
    AND LE.CLASSIFICATION_CODE = 'HCM_LEMP'
    AND TRUNC(SYSDATE) BETWEEN LE.EFFECTIVE_START_DATE AND LE.EFFECTIVE_END_DATE
    AND LE.LEGAL_ENTITY_ID = XEP.LEGAL_ENTITY_ID (+)
	AND XEP.LEGAL_ENTITY_ID=XR.SOURCE_ID
	AND XR.SOURCE_TABLE='XLE_ENTITY_PROFILES'
	AND XR.IDENTIFYING_FLAG='Y'
	AND LE.ORGANIZATION_ID = HAOU.ORGANIZATION_ID(+)
	AND XR.LOCATION_ID=HL.LOCATION_ID
    AND PAPF.primary_email_id = EML.email_address_id(+)
    AND EML.email_type(+) = 'W1'
    AND PAAM.CONTRACT_ID = PCF.CONTRACT_ID (+)
	AND HAOU.NAME = NVL(:P_BUSINESS_UNIT,HAOU.NAME)
	AND LE.NAME = NVL(:P_LEGAL_ENTITY_NAME,LE.NAME)
	AND PPNF.DISPLAY_NAME = NVL(:P_PERSON_NAME,PPNF.DISPLAY_NAME)
	AND PAPF.PERSON_NUMBER = NVL(:P_PERSON_NUMBER,PAPF.PERSON_NUMBER)
